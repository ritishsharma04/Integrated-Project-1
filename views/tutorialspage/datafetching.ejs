<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Events in react</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/tutorials.css">

</head>

<body>
    <%- include("../includes/nav.ejs")%>
        <%- include('../includes/subnav.ejs') %>

            <div class="container-fluid">
                <div class="row">

                    <div class="menubox col col-2 border border-2 p-3" style="height: 600px; overflow: auto;">
                        <%- include('./reactpagenav.ejs')%>
                    </div>
                    <div class=" col  border border-2" style="height: 600px; overflow: auto;">
                        <div class="flex mb-10 flex-col gap-y-5 md:px-3 ">
                            <!-- code starts here -->
                            <div class="container mt-5">
                                <div class="mb-10">
                                    <h1 class="h1">Data fetching in React</h1>
                                    <p class="lead">When building web applications using React, it's important to be able to get data from servers and manage it properly to provide a smooth experience for users. This article will explain different ways to do this, including some popular methods and tips for handling tasks that take longer to complete.</p>
                                </div>
                                <div class="mb-4">
                                    <h2 class="h3" id="why-is-data-fetching-important">Why is Data Fetching Important?</h2>
                                    <p>In React applications, <strong>data fetching is the process of retrieving external data,</strong> often from APIs or databases, to populate and update the application state. Efficient data fetching ensures that your application remains responsive and up-to-date, <strong>providing users with the latest information.</strong></p>
                                </div>
                                <div class="mb-4">
                                    <h2 class="h4" id="1-fetching-data-with-fetch">1) Fetching Data with fetch:</h2>
                                    <p>The fetch API is a modern and built-in way to make <strong>HTTP requests</strong>. Here's a simple example of fetching data using fetch:</p>
                                    <div class="alert alert-success" role="alert">
                                        <p>HTTP (Hypertext Transfer Protocol) is the foundation of data communication on the World Wide Web. It is an application layer protocol used for transmitting and receiving information on the internet. An HTTP request is a message sent by a client (such as a web browser) to a server to request a particular resource or perform a specific action.</p>
                                    </div>
                                    <div class="card mb-4">
                                        <div class="card-header bg-secondary text-white">
                                            <div class="d-flex align-items-center">
                                                <div class="bg-danger rounded-circle"></div>
                                                <div class="bg-warning rounded-circle ms-2"></div>
                                                <div class="bg-success rounded-circle ms-2"></div>
                                                <div class="ms-auto">App.jsx</div>
                                            </div>
                                        </div>
                                        <div class="card-body bg-dark text-light">
                                            <pre><code>import &#123; useState, useEffect &#125; from "react";
                            import ReactDOM from "react-dom/client";
                            
                            function App() &#123;
                              const [pictureUrl, setPictureUrl] = useState(null);
                            
                              useEffect(() => &#123;
                                const fetchCatPicture = async () => &#123;
                                  try &#123;
                                    const response = await fetch('https://api.thecatapi.com/v1/images/search');
                                    const data = await response.json();
                                    const picture = data[0].url;
                                    setPictureUrl(picture);
                                  &#125; catch (error) &#123;
                                    console.error('Error fetching cat picture:', error);
                                  &#125;
                                &#125;;
                            
                                fetchCatPicture();
                              &#125;, []);
                            
                              return (
                                &lt;div&gt;
                                  &#123;pictureUrl ? (
                                    &lt;img src=&#123;pictureUrl&#125; alt="A cute cat" /&gt;
                                  ) : (
                                    &lt;p&gt;Loading cat picture...&lt;/p&gt;
                                  )&#125;
                                &lt;/div&gt;
                              );
                            &#125;
                            
                            export default App;</code></pre>
                                        </div>
                                    </div>
                                    <p>In the above we are fetching a cat image URL from <strong>api.thecatapi.com</strong>. This is the simplest way to fetch data from APIs.</p>
                                    <div class="alert alert-info" role="alert">
                                        <p><strong>Response of catapi:</strong> [{"id":"ab4","url":"https://cdn2.thecatapi.com/images/ab4.png","width":515,"height":343}]</p>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <h2 class="h4" id="2-advanced-data-fetching-with-axios">2) Advanced Data Fetching with Axios:</h2>
                                    <p>While <strong>fetch</strong> is powerful, libraries like <strong>Axios</strong> provide <strong>additional features</strong> and a <strong>simpler syntax</strong>. To use Axios, first, install it using <strong>npm</strong> or <strong>yarn</strong>:</p>
                                    <div class="card mb-4">
                                        <div class="card-body bg-dark text-light">
                                            <pre><code>npm install axios</code></pre>
                                        </div>
                                    </div>
                                    <p>Now, let's refactor the previous example using <strong>Axios</strong>:</p>
                                    <div class="card mb-4">
                                        <div class="card-body bg-dark text-light">
                                            <pre><code>import &#123; useState, useEffect &#125; from "react";
                            import axios from "axios";
                            
                            function App() &#123;
                              const [pictureUrl, setPictureUrl] = useState(null);
                            
                              useEffect(() => &#123;
                                const fetchCatPicture = async () => &#123;
                                  try &#123;
                                    const response = await axios.get('https://api.thecatapi.com/v1/images/search');
                                    const picture = response.data[0].url;
                                    setPictureUrl(picture);
                                  &#125; catch (error) &#123;
                                    console.error('Error fetching cat picture:', error);
                                  &#125;
                                &#125;;
                            
                                fetchCatPicture();
                              &#125;, []);
                            
                              return (
                                &lt;div&gt;
                                  &#123;pictureUrl ? (
                                    &lt;img src=&#123;pictureUrl&#125; alt="A cute cat" /&gt;
                                  ) : (
                                    &lt;p&gt;Loading cat picture...&lt;/p&gt;
                                  )&#125;
                                &lt;/div&gt;
                              );
                            &#125;
                            
                            export default App;</code></pre>
                                        </div>
                                    </div>
                                    <p>Axios simplifies the process of making <strong>HTTP requests</strong>, handling responses and errors in a cleaner way.</p>
                                </div>
                                <div class="mb-4">
                                    <h2 class="h4" id="3-optimizing-data-fetching-with-react-query">3 Optimizing Data Fetching with React Query:</h2>
                                    <p><strong>React Query</strong> is a powerful library for managing and caching <strong>data fetching in React applications</strong>. It provides hooks and utilities to <strong>optimize data fetching</strong> and maintain a <strong>consistent data state.</strong>
                                        <strong>To use React Query, install it with npm or yarn:</strong></p>
                                    <div class="card mb-4">
                                        <div class="card-body bg-dark text-light">
                                            <pre><code>npm install react-query</code></pre>
                                        </div>
                                    </div>
                                    <p>Now, let's enhance our data fetching component using <strong>React Query:</strong></p>
                                    <div class="card mb-4">
                                        <div class="card-body bg-dark text-light">
                                            <pre><code>import &#123; useState &#125; from "react";
                            import &#123; useQuery &#125; from "react-query";
                            import axios from "axios";
                            
                            function App() &#123;
                              const &#123; isLoading, error, data &#125; = useQuery('catPicture', async () => &#123;
                                const response = await axios.get('https://api.thecatapi.com/v1/images/search');
                                return response.data[0].url;
                              &#125;);
                            
                              return (
                                &lt;div&gt;
                                  &#123;isLoading ? (
                                    &lt;p&gt;Loading cat picture...&lt;/p&gt;
                                  ) : error ? (
                                    &lt;p&gt;Error fetching cat picture: &#123;error.message&#125;&lt;/p&gt;
                                  ) : (
                                    &lt;img src=&#123;data&#125; alt="A cute cat" /&gt;
                                  )&#125;
                                &lt;/div&gt;
                              );
                            &#125;
                            
                            export default App;</code></pre>
                                        </div>
                                    </div>
                                    <p>React Query simplifies <strong>data fetching</strong> by encapsulating the logic within the useQuery hook. It <strong>handles caching</strong>, <strong>stale data management</strong>, and <strong>automatic re-fetching when needed.</strong></p>
                                </div>
                                <div class="mb-4">
                                    <h2 class="h3" id="conclusion">Conclusion</h2>
                                    <p><strong>Data fetching</strong> is an integral part of building robust and dynamic React applications. Whether you opt for the native <strong>fetch API</strong>, the convenience of <strong>Axios</strong>, or the performance optimization offered by <strong>React Query</strong>, the key is to ensure that your data fetching strategy aligns with your application's requirements.</p>
                                </div>
                            </div>
                            <!-- code ends here -->
                        </div>
                    </div>
                </div>
            </div>
            <%- include("../includes/footer.ejs")%>
                <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
                <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>

</html>