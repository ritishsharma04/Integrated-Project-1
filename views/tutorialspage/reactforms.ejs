<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forms in React</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/tutorials.css">

</head>

<body>
    <%- include("../includes/nav.ejs")%>
        <%- include('../includes/subnav.ejs') %>

            <div class="container-fluid">
                <div class="row">

                    <div class="menubox col col-2 border border-2 p-3" style="height: 600px; overflow: auto;">
                        <%- include('./reactpagenav.ejs')%>
                    </div>
                    <div class=" col  border border-2" style="height: 600px; overflow: auto;">
                        <div class="flex mb-10 flex-col gap-y-5 md:px-3 ">
                            <!-- code starts here -->
                            <div class="container mt-5">
                                <div class="mt-5 d-flex justify-content-between">
                                    <h1 class="h1">React Forms</h1>
                                </div>
                                <div class="pt-2 min-vh-100">
                                    <p>React Forms are mostly like normal HTML forms, except we use state in this to handle inputs.&nbsp;</p>
                                    <h2>Handling Forms</h2>
                                    <p>In React all the data is handled by component and stored in component state. We can change state with event handlers in the onChange attribute, like this:</p>
                                    <div class="bg-black text-white p-3 border rounded">
                                        <pre><code>import &#123; useState &#125; from 'react';
                            
function Form() &#123;
  const [email, setEmail] = useState('');

  return (
    &lt;form&gt;
      &lt;label&gt;
        Enter your email: &lt;input type="email" value=&#123;email&#125; onChange=&#123;(e) =&gt; setEmail(e.target.value)&#125; /&gt;
      &lt;/label&gt;
  
  );
&#125;

export default Form;</code></pre>
                                    </div>
                                    <h2>&nbsp;</h2>
                                    <h2>Submitting Form</h2>
                                    <p>We can submit form with onSubmit  attribute for the &lt;form&gt; </p>
                                    <div class="bg-black text-white p-3 border rounded">
                                        <pre><code>import &#123; useState &#125; from 'react';
                            
function Form() &#123;
  const [email, setEmail] =

  const handleSubmit = (e) =&gt; &#123;
    e.preventDefault();
    alert(`Your email is: &#123;email&#125;`);
  &#125;

  return (
    &lt;form onSubmit=&#123;handleSubmit&#125;&gt;
      &lt;label&gt;
        Enter your email: &lt;input type="email" value=&#123;email&#125; onChange=&#123;(e) =&gt; setEmail(e.target.value)&#125; /&gt;
      &lt;/label&gt;
      &lt;input type="submit" /&gt;
    &lt;/form&gt;
  );
&#125;

export default Form;</code></pre>
                                    </div>
                                    <p>&nbsp;</p>
                                    <h2>Multiple Inputs</h2>
                                    <p>We don't have to make multiple states for multiple inputs, we can save all values in one, like this:</p>
                                    <div class="bg-black text-white p-3 border rounded">
                                        <pre><code>import &#123; useState &#125; from 'react';
                            
function Form() &#123;
  const [data, setData] = useState(&#123;&#125;);

  const handleChange = (e) =&gt; &#123;
    setData(&#123;...data, [e.target.name]: e.target.value&#125;);
  &#125;

  const handleSubmit = (e) =&gt; &#123;
    e.preventDefault();
    alert(`Your email is: &#123;data.email&#125; and your name is: &#123;data.name&#125;`);
  &#125;

  return (
    &lt;form onSubmit=&#123;handleSubmit&#125;&gt;
      &lt;label&gt;
        Enter your email: &lt;input type="email" name='email' value=&#123;data.email&#125; onChange=&#123;handleChange&#125; /&gt;
      &lt;/label&gt;
      &lt;label&gt;
        Enter your name: &lt;input type="text" name='name' value=&#123;data.name&#125; onChange=&#123;handleChange&#125; /&gt;
      &lt;/label&gt;
      &lt;input type="submit" /&gt;
    &lt;/form&gt;
  );
&#125;

export default Form;</code></pre>
                                    </div>
                                    <p>H handle  we used <strong>Spread Operators</strong>. We are basically saying keep whole data as it was, just change this name's value. Then it is saved as an object so we are getting t data dat .&nbsp;</p>
                                </div>
                            </div>
                            <!-- code ends here -->
                        </div>
                    </div>
                </div>
            </div>
            <%- include("../includes/footer.ejs")%>
                <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
                <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>

</html>