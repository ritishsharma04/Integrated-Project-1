<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>java(oops)</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body>
    <%- include('../includes/nav.ejs') %>
    <%- include('../includes/subnav.ejs') %>
    <div class="container-fluid">
        <div class="row">
            
            <div class="menubox col col-2 border border-2 p-3" style="height: 600px; overflow: auto;">
                <%- include('./javanav.ejs') %>
            </div>
            <div class="col  border border-2" style="height: 600px; overflow: auto;">
                <!-- code starts here -->
                <div class="container-fluid px-2 px-md-8">
                    <div class="row mt-5 justify-content-between">
                      <h1 class="col text-3xl lg:text-4xl font-semibold text-gray-800 mb-1">Inheritance</h1>
                    </div>
                    
                    <div class="pt-2 min-vh-100 text-gray-200">
                      <p>Inheritance is the mechanism by which one class acquires the properties and features of another class. The class that inherits the properties is called as a sub-class (child class) while the class from which the property is inherited is called as the super-class (parent class).</p>
                      <p>A child class inherits properties of parent class with the help of extends keyword.</p>
                      <p><strong>Syntax:</strong></p>
                      <pre class="bg-dark text-white"><code>class childClass extends parentClass {
    //any code
}</code></pre>
                      
                      <h3>Inheritance can be further divided into the following types:</h3>
                      <ul>
                        <li>Single level</li>
                        <li>Multi-level</li>
                        <li>Hierarchical</li>
                        <li>Multiple</li>
                        <li>Hybrid</li>
                      </ul>
                      
                      <p>Multiple and hybrid inheritance is not directly supported in Java, instead it is achieved through the use of interfaces in Java.</p>
                      
                      <h3>i. Single Inheritance</h3>
                      <p>When a single class inherits the attributes and methods of another class, it is known as single inheritance.</p>
                      <img src="https://cwh-full-next-space.fra1.digitaloceanspaces.com/tutorial/java-inheritance/single-inheritance.png" class="img-fluid" alt="Single Inheritance">
                      
                      <p><strong>Example:</strong></p>
                      <pre class="bg-black text-white">
<code>
    class FundamentalForce {
        void Force() {
            System.out.println("There are four fundamental forces.");
        }
    }
    
    class Gravitational extends FundamentalForce {
        void Gravity() {
            System.out.println("Fruits fall to the ground due to gravitational Force.");
        }
    }
    
    class SingleInheritance {
        public static void main(String[] args) {
            Gravitational G = new Gravitational();
            G.Force();
            G.Gravity();
        }
    }                  
</code>
                    </pre>
                      
                      <p>Output:</p>
                      <pre class="bg-black text-white">
<code>
    There are four fundamental forces.
    Fruits fall to the ground due to gravitational Force.
</code>
            </pre>
                      
                      <h3>ii. Multi-level Inheritance</h3>
                      <p>When a class 3 inherits attributes and methods from class 2 which in turn inherits its attributes and methods from class 1, it is called a multi-level inheritance.</p>
                      <img src="https://cwh-full-next-space.fra1.digitaloceanspaces.com/tutorial/java-inheritance/multi-level_inheritance.png" class="img-fluid" alt="Multi-level Inheritance">
                      
                      <p><strong>Example:</strong></p>
                      <pre class="bg-dark text-white">
<code>
    class NuclearForce extends FundamentalForce {
        void Nuclear() {
            System.out.println("Nuclear Forces are of two types;");
            System.out.println("Strong Nuclear Force");
            System.out.println("Weak Nuclear Force");
        }
    }
    
    class StrongNuclearForce extends NuclearForce {
        void Strong() {
            System.out.println("Strong Nuclear Force is responsible for the underlying stability of matter.");
        }
    }
    
    class MultilevelInheritance {
        public static void main(String[] args) {
            StrongNuclearForce st = new StrongNuclearForce();
            st.Force();
            st.Nuclear();
            st.Strong();
        }
    }
</code>
</pre>
                      
                      <p>Output:</p>
<pre class="bg-dark text-white ">
<code>
    There are four fundamental forces.
    Nuclear Forces are of two types;
    Strong Nuclear Force
    Weak Nuclear Force
    Strong Nuclear Force is responsible for the underlying stability of matter.
</code>
</pre>
                      <div class="container-fluid px-2 px-md-8">
                          <h3>iii. Hierarchical Inheritance</h3>
                          <p>Hierarchical inheritance is when two or more classes inherit from a single class. This can be easily visualized as a parent with more than one child. Here each child can inherit the properties of a parent.</p>
                          <img src="https://cwh-full-next-space.fra1.digitaloceanspaces.com/tutorial/java-inheritance/hierarchical-inheritance.png" class="img-fluid" alt="">
                        
                        <h4>Example:</h4>
                        
                        <pre class="bg-dark text-white p-3 border rounded">
<code class="language-java">
    class FundamentalForce {
        void Force() {
            System.out.println("There are four fundamental forces.");
        }
    }
    
    class Gravitational extends FundamentalForce {
        void Gravity() {
            System.out.println("Fruits fall to the ground due to gravitational Force.");
        }
    }
    
    class Electromagnetic extends FundamentalForce {
        void Particles() {
            System.out.println("The electromagnetic force acts between charged particles");
        }
    }
    
    class HierarchicalInheritance {
        public static void main(String[] args) {
            System.out.println("Child 1:");
            Gravitational G = new Gravitational();
            G.Force();
            G.Gravity();
            
            System.out.println();
            System.out.println("Child 2");
            Electromagnetic em = new Electromagnetic();
            em.Force();
            em.Particles();
        }
    }
</code>
                        </pre>
                        
                        <h4>Output:</h4>
                        <pre class="bg-black text-white p-3 border rounded">
                            <code>
    Child 1:
    There are four fundamental forces.
                    Fruits fall to the ground due to gravitational Force.
                    
    Child 2
    There are four fundamental forces.
    The electromagnetic force acts between charged particles
                            </code>
                        </pre>
                    </div>
                <!-- code ends here -->
            </div>
        </div>
    </div>
    <%- include('../includes/footer.ejs') %>
</body>
</html>