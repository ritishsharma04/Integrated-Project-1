<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interview Questions</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/tutorials.css">
    <style>
        ol li a{
            color: black;
        }
    </style>
</head>
<body>
    <%- include("../includes/nav.ejs") %>
    <%- include("../includes/interviewnav.ejs")%>
    <!-- code starts here -->
    <div class="container bg-white text-black p-4">
        <h1 class="display-6 mb-4">MongoDB Interview Questions</h1>
        <p class="mb-4">18 often-asked advanced MongoDB interview questions</p>
        
        <h4 class="h4 text-primary mb-2">1. What is a document in MongoDB?</h4>
        <p class="mb-4">Ans. A document in MongoDB is a basic unit of data that is stored in a collection. It is represented in BSON (Binary JSON) format and can contain nested fields and arrays.</p>
        
        <h4 class="h4 text-primary mb-2">2. What is a collection in MongoDB?</h4>
        <p class="mb-4">Ans. A collection in MongoDB is a group of related documents. It is similar to a table in relational databases but does not enforce a schema.</p>
        
        <h4 class="h4 text-primary mb-2">3. How does MongoDB handle data consistency?</h4>
        <p class="mb-4">Ans. MongoDB uses a model called eventual consistency, which allows for high availability and partition tolerance. It provides strong consistency for single-document operations and eventual consistency for multi-document operations.</p>
        
        <h4 class="h4 text-primary mb-2">4. What is the purpose of the `_id` field in MongoDB?</h4>
        <p class="mb-4">Ans. The `_id` field is a unique identifier for each document in a collection. It is automatically created by MongoDB if not provided and can be of any data type.</p>
        
        <h4 class="h4 text-primary mb-2">5. What are indexes in MongoDB, and why are they important?</h4>
        <p class="mb-4">Ans. Indexes in MongoDB are special data structures that improve the speed of data retrieval operations. They are important for optimizing query performance and ensuring efficient data access.</p>
        
        <h4 class="h4 text-primary mb-2">6. What is the aggregation framework in MongoDB?</h4>
        <p class="mb-4">Ans. The aggregation framework in MongoDB is a powerful tool for processing and transforming data. It allows for operations like filtering, grouping, and sorting data using a pipeline approach.</p>
        
        <h4 class="h4 text-primary mb-2">7. How do you perform a join operation in MongoDB?</h4>
        <p class="mb-4">Ans. MongoDB does not support traditional joins like SQL databases. However, you can perform join-like operations using the `$lookup` stage in the aggregation framework to combine documents from different collections.</p>
        
        <h4 class="h4 text-primary mb-2">8. What is the difference between `find()` and `findOne()` in MongoDB?</h4>
        <p class="mb-4">Ans. The `find()` method returns a cursor to all documents that match the query, while `findOne()` returns the first document that matches the query or `null` if no document is found.</p>
        
        <h4 class="h4 text-primary mb-2">9. What is a replica set in MongoDB?</h4>
        <p class="mb-4">Ans. A replica set in MongoDB is a group of MongoDB servers that maintain the same data set. It provides redundancy and high availability by automatically handling failover and data replication.</p>
        
        <h4 class="h4 text-primary mb-2">10. How does sharding work in MongoDB?</h4>
        <p class="mb-4">Ans. Sharding in MongoDB is a method for distributing data across multiple servers to ensure horizontal scalability. It divides data into chunks and distributes them across shards based on a shard key.</p>
        
        <h4 class="h4 text-primary mb-2">11. What is the purpose of the `MongoDB Atlas`?</h4>
        <p class="mb-4">Ans. MongoDB Atlas is a cloud-based database service provided by MongoDB. It offers automated deployment, scaling, and management of MongoDB databases, allowing developers to focus on building applications.</p>
        
        <h4 class="h4 text-primary mb-2">12. How do you update documents in MongoDB?</h4>
        <p class="mb-4">Ans. Documents in MongoDB can be updated using the `updateOne()`, `updateMany()`, or `replaceOne()` methods. You can specify the criteria for the update and the new values to be set.</p>
        
        <h4 class="h4 text-primary mb-2">13. What is the difference between `insertOne()` and `insertMany()` in MongoDB?</h4>
        <p class="mb-4">Ans. The `insertOne()` method is used to insert a single document into a collection, while `insertMany()` is used to insert multiple documents at once.</p>
        
        <h4 class="h4 text-primary mb-2">14. What are the different data types supported by MongoDB?</h4>
        <p class="mb-4">Ans. MongoDB supports various data types, including String, Integer, Boolean, Double, Array, Object, Null, and Date, among others.</p>
        
        <h4 class="h4 text-primary mb-2">15. How do you handle transactions in MongoDB?</h4>
        <p class="mb-4">Ans. MongoDB supports multi-document transactions, allowing you to execute multiple operations atomically. You can use the `startSession()` method to create a session and then use `withTransaction()` to perform the operations.</p>
        
        <h4 class="h4 text-primary mb-2">16. What is the purpose of the `MongoDB Compass`?</h4>
        <p class="mb-4">Ans. MongoDB Compass is a graphical user interface (GUI) for MongoDB that allows users to visualize and analyze data, run queries, and manage indexes without writing code.</p>
        
        <h4 class="h4 text-primary mb-2">17. How do you perform a text search in MongoDB?</h4>
        <p class="mb-4">Ans. Text search in MongoDB can be performed using text indexes. You can create a text index on a field and then use the `$text` operator in queries to search for specific terms.</p>
        
        <h4 class="h4 text-primary mb-2">18. What is the difference between `db.collection.find()` and `db.collection.aggregate()`?</h4>
        <p class="mb-4">Ans. `db.collection.find()` is used for simple queries to retrieve documents, while `db.collection.aggregate()` is used for more complex data processing and transformation using the aggregation framework.</p>
    </div>
    <!-- code ends here -->
    <%- include('../includes/footer.ejs') %>
</body>
</html>