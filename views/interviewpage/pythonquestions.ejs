<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interview Questions</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/tutorials.css">
    <style>
        ol li a{
            color: black;
        }
    </style>
</head>
<body>
    <%- include("../includes/nav.ejs") %>
    <%- include("../includes/interviewnav.ejs")%>
    <!-- code starts here -->
    <div class="container bg-white text-black p-4">
        <h1 class="display-6 mb-4">Python Interview Questions</h1>
        <p class="mb-4">Here are 20 commonly asked Python interview questions:</p>
        
        <h4 class="h4 text-primary mb-2">1. What is Python?</h4>
        <p class="mb-4">Ans. Python is a high-level, interpreted programming language known for its readability and simplicity. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming.</p>
        
        <h4 class="h4 text-primary mb-2">2. What are Python's built-in data types?</h4>
        <p class="mb-4">Ans. Python's built-in data types include integers, floats, strings, lists, tuples, sets, and dictionaries.</p>
        
        <h4 class="h4 text-primary mb-2">3. What is the difference between a list and a tuple?</h4>
        <p class="mb-4">Ans. Lists are mutable (can be changed), while tuples are immutable (cannot be changed). Lists are defined using square brackets, while tuples are defined using parentheses.</p>
        
        <h4 class="h4 text-primary mb-2">4. What is a dictionary in Python?</h4>
        <p class="mb-4">Ans. A dictionary is an unordered collection of key-value pairs. Keys must be unique and immutable, while values can be of any data type.</p>
        
        <h4 class="h4 text-primary mb-2">5. What are Python decorators?</h4>
        <p class="mb-4">Ans. Decorators are functions that modify the behavior of another function. They are often used to add functionality to existing functions in a clean and readable way.</p>
        
        <h4 class="h4 text-primary mb-2">6. What is the purpose of the `self` keyword in Python?</h4>
        <p class="mb-4">Ans. The `self` keyword is used to represent the instance of the class. It allows access to the attributes and methods of the class in Python.</p>
        
        <h4 class="h4 text-primary mb-2">7. What is the difference between `==` and `is` in Python?</h4>
        <p class="mb-4">Ans. `==` checks for value equality, while `is` checks for identity (whether two references point to the same object in memory).</p>
        
        <h4 class="h4 text-primary mb-2">8. What are list comprehensions in Python?</h4>
        <p class="mb-4">Ans. List comprehensions provide a concise way to create lists. They consist of brackets containing an expression followed by a `for` clause, and can include optional `if` clauses.</p>
        
        <h4 class="h4 text-primary mb-2">9. What is the purpose of the `with` statement in Python?</h4>
        <p class="mb-4">Ans. The `with` statement is used to wrap the execution of a block of code within methods defined by a context manager. It ensures proper acquisition and release of resources, such as file handling.</p>
        
        <h4 class="h4 text-primary mb-2">10. What is the difference between `append()` and `extend()` methods in lists?</h4>
        <p class="mb-4">Ans. `append()` adds a single element to the end of a list, while `extend()` adds multiple elements from an iterable to the end of the list.</p>
        
        <h4 class="h4 text-primary mb-2">11. What are Python modules and packages?</h4>
        <p class="mb-4">Ans. A module is a single file containing Python code, while a package is a collection of related modules organized in a directory hierarchy. Packages allow for better organization of code.</p>
        
        <h4 class="h4 text-primary mb-2">12. What is exception handling in Python?</h4>
        <p class="mb-4">Ans. Exception handling is a mechanism to handle runtime errors in Python using `try`, `except`, `else`, and `finally` blocks. It allows the program to continue execution even when an error occurs.</p>
        
        <h4 class="h4 text-primary mb-2">13. What is the purpose of the `pass` statement in Python?</h4>
        <p class="mb-4">Ans. The `pass` statement is a null operation; it is used as a placeholder in blocks of code where syntactically some code is required but no action is needed.</p>
        
        <h4 class="h4 text-primary mb-2">14. What are lambda functions in Python?</h4>
        <p class="mb-4">Ans. Lambda functions are anonymous functions defined using the `lambda` keyword. They can take any number of arguments but can only have one expression.</p>
        
        <h4 class="h4 text-primary mb-2">15. What is the difference between deep copy and shallow copy?</h4>
        <p class="mb-4">Ans. A shallow copy creates a new object but inserts references into it to the objects found in the original. A deep copy creates a new object and recursively adds copies of nested objects found in the original.</p>
        
        <h4 class="h4 text-primary mb-2">16. What is the purpose of the `__init__` method in Python?</h4>
        <p class="mb-4">Ans. The `__init__` method is a special method in Python classes that initializes the object's attributes when an instance of the class is created.</p>
        
        <h4 class="h4 text-primary mb-2">17. What are Python iterators?</h4>
        <p class="mb-4">Ans. Iterators are objects that implement the iterator protocol, consisting of the `__iter__()` and `__next__()` methods. They allow for traversing through a collection without exposing the underlying structure.</p>
        
        <h4 class="h4 text-primary mb-2">18. What is the purpose of the `global` keyword in Python?</h4>
        <p class="mb-4">Ans. The `global` keyword is used to declare a variable as global, allowing it to be modified inside a function. Without it, a variable assigned within a function is treated as a local variable.</p>
        
        <h4 class="h4 text-primary mb-2">19. What is the difference between `range()` and `xrange()` in Python?</h4>
        <p class="mb-4">Ans. In Python 2, `range()` returns a list, while `xrange()` returns an iterator that generates numbers on demand. In Python 3, `range()` behaves like `xrange()` from Python 2.</p>
        
        <h4 class="h4 text-primary mb-2">20. What are Python's built-in functions?</h4>
        <p class="mb-4">Ans. Python has several built-in functions, including `print()`, `len()`, `type()`, `int()`, `str()
    <!-- code ends here -->
     </div>
    <%- include('../includes/footer.ejs') %>
</body>
</html>